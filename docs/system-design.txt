---* Social media *---
 

------   Functionally Request  ------
User:
- Login with username and password
- Login with google and ...
- Register account and  Authenticate by email
- Hashing password with Bcrypt 
- View personal infomation
- Update infomation
- Change password 
Posts: 
- User write and post an article
- Users follow another user
- User can like and comment on posts friends  
Chat: 
- The user sends message/image/file to friends
- The user calls video with  friends
- Add the group chat


----- Tech  ----- 
Back-End:
	NodeJS
	ExpressJS
	JWT: authenticate 
	Nodemailer
	Restful API
	MongoDB

	Package: 
	+ morgan - folow request client
	+ helmet - security header
	+ compression - optimate response


Architecture:  services



----- Database ------
Account:
	name: {
            type: String,
            trim: true,
            maxLength: 50,
        },
	email: {
		type: String,
		unique: true,
		required: true,
	},
	password: {
		type: String,
		required: true,
	},
	friends: {
		type: [Schema.Types.ObjectId],
		default: [],
	},
	avatar: {
		type: String,
		default: '',
	},
	coverImage: {
		type: String,
		default: '',
	},
	status: {
		type: String,
		enum: ['active', 'inactive'],
		default: 'inactive',
	},
	verify: {
		type: Schema.Types.Boolean,
		default: false,
	},
	roles: {
		type: Array,
		default: [],
	},
	
Posts:
	id
	userId:
	title:
	description:
	images:[]
	likes: [
		userId:
	]
	comments: [
		commentId	
	]
Comment:
	id:
	userId:
	postsId:
	Content:
	
Chat 
	id
	chatName:
	isGroupChat:
	users: [
		userId
	]
	latestMessage: messageId


Message:
	id: 
	sender:
	receiver:
	content:
	chatId :
	
	
	